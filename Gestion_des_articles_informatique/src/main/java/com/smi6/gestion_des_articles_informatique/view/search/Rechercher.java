/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.smi6.gestion_des_articles_informatique.view.search;

import com.smi6.gestion_des_articles_informatique.controller.search.GeneralSearchController;
import com.smi6.gestion_des_articles_informatique.model.Article;
import com.smi6.gestion_des_articles_informatique.model.Brevet;
import com.smi6.gestion_des_articles_informatique.model.Conference;
import com.smi6.gestion_des_articles_informatique.model.Memoire;
import com.smi6.gestion_des_articles_informatique.model.Professeur;
import com.smi6.gestion_des_articles_informatique.model.RapportRecherche;
import com.smi6.gestion_des_articles_informatique.model.These;
import com.smi6.gestion_des_articles_informatique.view.connexion_home.Accueille_avec_compte2;
import com.smi6.gestion_des_articles_informatique.view.connexion_home.Accueille_admin2;
import com.smi6.gestion_des_articles_informatique.view.connexion_home.Accueille_sans_compte2;
import com.smi6.gestion_des_articles_informatique.model.Utilisateur;
import com.smi6.gestion_des_articles_informatique.view.search.PublicationListView;
import com.smi6.gestion_des_articles_informatique.view.search.SelectProfesseursPanel_R;
import com.smi6.gestion_des_articles_informatique.view.search.Select_type_R;
import com.smi6.gestion_des_articles_informatique.view.uploads.SelectProfesseursPanel;
import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import jakarta.persistence.TypedQuery;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import javax.swing.JDialog;
import javax.swing.JOptionPane;

/**
 *
 * @author AYA HM1
 */
public class Rechercher extends javax.swing.JFrame {
private Utilisateur U;
    /**
     * Creates new form Cherche
     */
    public Rechercher(Utilisateur U) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.U = U;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TF_date2 = new javax.swing.JTextField();
        L_publierle2 = new javax.swing.JLabel();
        L_auteurs = new javax.swing.JLabel();
        B_SelectA = new javax.swing.JButton();
        TF_auteurs = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        L_publierle = new javax.swing.JLabel();
        TF_date = new javax.swing.JTextField();
        L_publierle1 = new javax.swing.JLabel();
        TF_date1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        B_retourner1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(239, 227, 194));

        TF_date2.setBackground(new java.awt.Color(239, 227, 194));
        TF_date2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_date2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_date2ActionPerformed(evt);
            }
        });

        L_publierle2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_publierle2.setForeground(new java.awt.Color(18, 53, 36));
        L_publierle2.setText("Mots cles");

        L_auteurs.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_auteurs.setForeground(new java.awt.Color(18, 53, 36));
        L_auteurs.setText("Auteurs");

        B_SelectA.setBackground(new java.awt.Color(18, 53, 36));
        B_SelectA.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_SelectA.setForeground(new java.awt.Color(239, 227, 194));
        B_SelectA.setText("Select Auteurs");
        B_SelectA.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        B_SelectA.setFocusable(false);
        B_SelectA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_SelectAActionPerformed(evt);
            }
        });

        TF_auteurs.setBackground(new java.awt.Color(239, 227, 194));
        TF_auteurs.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_auteurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_auteursActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(18, 53, 36));
        jButton2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(239, 227, 194));
        jButton2.setText("Rechercher");
        jButton2.setToolTipText("");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setPreferredSize(new java.awt.Dimension(150, 45));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        L_publierle.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_publierle.setForeground(new java.awt.Color(18, 53, 36));
        L_publierle.setText("Publier entre");

        TF_date.setBackground(new java.awt.Color(239, 227, 194));
        TF_date.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_dateActionPerformed(evt);
            }
        });

        L_publierle1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_publierle1.setForeground(new java.awt.Color(18, 53, 36));
        L_publierle1.setText("et");

        TF_date1.setBackground(new java.awt.Color(239, 227, 194));
        TF_date1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_date1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_date1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("dd/mm/yyyy");

        B_retourner1.setBackground(new java.awt.Color(18, 53, 36));
        B_retourner1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_retourner1.setForeground(new java.awt.Color(239, 227, 194));
        B_retourner1.setText("Retourner");
        B_retourner1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        B_retourner1.setFocusable(false);
        B_retourner1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_retourner1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(L_auteurs, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(B_SelectA, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(TF_auteurs, javax.swing.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(L_publierle)
                            .addComponent(L_publierle2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TF_date2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(TF_date, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(L_publierle1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TF_date1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(B_retourner1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_auteurs)
                    .addComponent(B_SelectA)
                    .addComponent(TF_auteurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_publierle)
                    .addComponent(TF_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L_publierle1)
                    .addComponent(TF_date1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_publierle2)
                    .addComponent(TF_date2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 286, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B_retourner1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TF_date2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_date2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_date2ActionPerformed

    private void B_SelectAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_SelectAActionPerformed
        // Prepare list of pre-selected names
        String currentText = TF_auteurs.getText().trim();
        List<String> selectedProfesseurs = new ArrayList<>();
        if (!currentText.isEmpty()) {
            for (String name : currentText.split(",")) {
                selectedProfesseurs.add(name.trim());
            }
        }

        // Create panel with pre-selected names
        SelectProfesseursPanel_R selectProfPanel = new SelectProfesseursPanel_R(selectedProfesseurs);

        // Create dialog
        JDialog dialog = new JDialog(this, "Choisir Professeurs", true);
        dialog.getContentPane().add(selectProfPanel);
        dialog.pack();
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);

        // AFTER dialog is closed:
        // Get new list of selected professors
        String selected = selectProfPanel.getSelectedProfesseursText();

        // OVERWRITE the old text field content
        TF_auteurs.setText(selected);
    }//GEN-LAST:event_B_SelectAActionPerformed

    private void TF_auteursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_auteursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_auteursActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // Retrieve inputs from the user
    String auteurs = TF_auteurs.getText().trim();  // Get the authors from the text field
    String dateDebut = TF_date.getText().trim();   // Get the start date
    String dateFin = TF_date1.getText().trim();    // Get the end date
    String keywords = TF_date2.getText().trim();   // Get the keywords

    // Initialize the search controller
    GeneralSearchController controller = new GeneralSearchController();
    
    // Declare variables to hold the search results
    List<Article> articles = new ArrayList<>();
    List<Conference> conferences = new ArrayList<>();
    List<Brevet> brevets = new ArrayList<>();
    List<These> theses = new ArrayList<>();
    List<Memoire> memoires = new ArrayList<>();
    List<RapportRecherche> rapports = new ArrayList<>();

    try {
        // Perform the search using the GeneralSearchController
        Map<String, List<?>> searchResults = controller.search(
            keywords,  // Search text
            parseAuthors(auteurs),  // Convert the authors string to a list of professors
            dateDebut,  // Start date
            dateFin  // End date
        );

        // Extract the search results into appropriate lists
        articles = (List<Article>) searchResults.get("articles");
        conferences = (List<Conference>) searchResults.get("conferences");
        brevets = (List<Brevet>) searchResults.get("brevets");
        theses = (List<These>) searchResults.get("theses");
        memoires = (List<Memoire>) searchResults.get("memoires");
        rapports = (List<RapportRecherche>) searchResults.get("rapports");

    } catch (Exception e) {
        // Show an error message if the search fails
        JOptionPane.showMessageDialog(this, "Erreur lors de la recherche : " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Check if any results were found, and if not, inform the user
    if (articles.isEmpty() && conferences.isEmpty() && brevets.isEmpty() && theses.isEmpty() && memoires.isEmpty() && rapports.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Aucune publication trouvée avec les critères spécifiés.", "Aucun Résultat", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    // Open the PublicationListView with the search results
    PublicationListView resultsView = new PublicationListView(
        articles,    // Articles
        conferences, // Conferences
        brevets,     // Brevets
        theses,      // Theses
        memoires,    // Memoires
        rapports     // Rapport Recherche
    );
    resultsView.setVisible(true);  // Show the results in a new window (modal)
    }//GEN-LAST:event_jButton2ActionPerformed

    private void TF_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_dateActionPerformed

    private void TF_date1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_date1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_date1ActionPerformed

    private void B_retourner1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_retourner1ActionPerformed
        Select_type_R  ST = new Select_type_R(this.U);
        ST.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_B_retourner1ActionPerformed

    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rechercher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rechercher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rechercher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rechercher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Rechercher().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_SelectA;
    private javax.swing.JButton B_retourner1;
    private javax.swing.JLabel L_auteurs;
    private javax.swing.JLabel L_publierle;
    private javax.swing.JLabel L_publierle1;
    private javax.swing.JLabel L_publierle2;
    private javax.swing.JTextField TF_auteurs;
    private javax.swing.JTextField TF_date;
    private javax.swing.JTextField TF_date1;
    private javax.swing.JTextField TF_date2;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

 private List<Professeur> parseAuthors(String auteurs) {
    List<Professeur> professors = new ArrayList<>();
    
    if (auteurs != null && !auteurs.isEmpty()) {
        String[] names = auteurs.split(",");
        
        // Here, you'd need to fetch `Professeur` objects based on the parsed names
        // This might require a query to the database or matching with existing professors
        
        // Example: assuming Professeur class has a method to find by name
        for (String name : names) {
            Professeur professor = findProfessorByName(name.trim());
            if (professor != null) {
                professors.add(professor);
            }
        }
    }
    
    return professors;
}

private Professeur findProfessorByName(String name) {
    // Query to fetch the professor by name from the database (use EntityManager)
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("my-persistence-unit");
    EntityManager em = emf.createEntityManager();
    
    try {
        TypedQuery<Professeur> query = em.createQuery(
            "SELECT p FROM Professeur p WHERE p.nomComplet = :name", Professeur.class);
        query.setParameter("name", name);
        return query.getSingleResult();
    } catch (Exception e) {
        // Handle not found or multiple results gracefully
        return null;
    } finally {
        em.close();
    }
}

}
