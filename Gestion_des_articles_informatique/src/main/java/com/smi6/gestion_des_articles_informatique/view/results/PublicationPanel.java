/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.smi6.gestion_des_articles_informatique.view.results;

import com.smi6.gestion_des_articles_informatique.model.Article;
import com.smi6.gestion_des_articles_informatique.model.Brevet;
import com.smi6.gestion_des_articles_informatique.model.Conference;
import com.smi6.gestion_des_articles_informatique.model.Memoire;
import com.smi6.gestion_des_articles_informatique.model.RapportRecherche;
import com.smi6.gestion_des_articles_informatique.model.These;
import com.smi6.gestion_des_articles_informatique.view.results.PublicationDetailsDialog;
import java.awt.Image;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;

/**
 *
 * @author YN
 */
public class PublicationPanel extends javax.swing.JPanel {
    private Article A = null;
    private Conference C = null;
    private Brevet B = null;
    private These T = null;
    private Memoire M = null;
    private RapportRecherche R = null;

public PublicationPanel(Article A) {
    initComponents();
    this.A = A;
    populateFields(A.getTitre(), A.getDatePublication(), "Article");
}

public PublicationPanel(Conference C) {
    initComponents();
    this.C = C;
    populateFields(C.getTitre(), C.getDateConference(), "Conférence");
}

public PublicationPanel(Brevet B) {
    initComponents();
    this.B = B;
    populateFields(B.getTitre(), B.getDateDepot(), "Brevet");
}

public PublicationPanel(These T) {
    initComponents();
    this.T = T;
    populateFields(T.getTitre(), T.getDateSoutenance(), "Thèse");
}

public PublicationPanel(Memoire M) {
    initComponents();
    this.M = M;
    populateFields(M.getTitre(), M.getDateSoutenance(), "Mémoire");
}

public PublicationPanel(RapportRecherche R) {
    initComponents();
    this.R = R;
    populateFields(R.getTitre(), R.getDatePublication(), "Rapport de Recherche");
}



private void populateFields(String titreStr, Date date, String typeStr) {
    titre.setText(titreStr);
    titre2.setText(date != null ? new java.text.SimpleDateFormat("dd/MM/yyyy").format(date) : "Date inconnue");
    type.setText(typeStr);
}




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        option = new javax.swing.JPanel();
        B_Infos = new javax.swing.JButton();
        B_Lire = new javax.swing.JButton();
        type = new javax.swing.JTextField();
        titre = new javax.swing.JTextField();
        titre2 = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setPreferredSize(new java.awt.Dimension(1000, 99));

        B_Infos.setBackground(new java.awt.Color(18, 53, 36));
        B_Infos.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_Infos.setForeground(new java.awt.Color(239, 227, 194));
        B_Infos.setText("Infos");
        B_Infos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        B_Infos.setFocusable(false);
        B_Infos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_InfosActionPerformed(evt);
            }
        });

        B_Lire.setBackground(new java.awt.Color(18, 53, 36));
        B_Lire.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_Lire.setForeground(new java.awt.Color(239, 227, 194));
        B_Lire.setText("Lire");
        B_Lire.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        B_Lire.setFocusable(false);
        B_Lire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_LireActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionLayout = new javax.swing.GroupLayout(option);
        option.setLayout(optionLayout);
        optionLayout.setHorizontalGroup(
            optionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(B_Lire, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(optionLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(B_Infos, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        optionLayout.setVerticalGroup(
            optionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionLayout.createSequentialGroup()
                .addComponent(B_Lire)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(B_Infos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ImageIcon originalIcon1 = new ImageIcon(getClass().getResource("/icones/info.png"));
        Image scaledImage1 = originalIcon1.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon1 = new ImageIcon(scaledImage1);

        // Appliquer l’icône
        B_Infos.setIcon(resizedIcon1);
        B_Infos.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        B_Infos.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (icône + texte)
        B_Infos.setVerticalAlignment(SwingConstants.CENTER);

        // Pour éviter que le texte soit décalé par la taille du bouton
        B_Infos.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte à droite de l’icône
        B_Infos.setVerticalTextPosition(SwingConstants.CENTER);  // Aligné verticalement
        ImageIcon originalIcon = new ImageIcon(getClass().getResource("/icones/lire.png"));
        Image scaledImage = originalIcon.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon = new ImageIcon(scaledImage);

        // Appliquer l’icône
        B_Lire.setIcon(resizedIcon);
        B_Lire.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        B_Lire.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (icône + texte)
        B_Lire.setVerticalAlignment(SwingConstants.CENTER);

        // Pour éviter que le texte soit décalé par la taille du bouton
        B_Lire.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte à droite de l’icône
        B_Lire.setVerticalTextPosition(SwingConstants.CENTER);  // Aligné verticalement

        type.setBackground(new java.awt.Color(239, 227, 194));
        type.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        type.setText("Type");
        type.setFocusable(false);
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });

        titre.setBackground(new java.awt.Color(239, 227, 194));
        titre.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        titre.setText("Titre");
        titre.setFocusable(false);
        titre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titreActionPerformed(evt);
            }
        });

        titre2.setBackground(new java.awt.Color(239, 227, 194));
        titre2.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        titre2.setText("Date");
        titre2.setFocusable(false);
        titre2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titre2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(titre2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(titre, javax.swing.GroupLayout.PREFERRED_SIZE, 788, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titre2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(titre, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(option, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeActionPerformed

    private void B_LireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_LireActionPerformed

            String path = null;

    if (A != null) path = A.getCheminPdf();
    else if (C != null) path = C.getCheminPdf();
    else if (B != null) path = B.getCheminPdf();
    else if (T != null) path = T.getCheminPdf();
    else if (M != null) path = M.getCheminPdf();
    else if (R != null) path = R.getCheminPdf();

    if (path != null && !path.isEmpty()) {
        try {
            java.awt.Desktop.getDesktop().browse(new java.io.File(path).toURI());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Impossible d'ouvrir le fichier PDF.", "Erreur", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    } else {
        JOptionPane.showMessageDialog(this, "Aucun fichier PDF disponible.", "Erreur", JOptionPane.WARNING_MESSAGE);
    }
        
    }//GEN-LAST:event_B_LireActionPerformed

    private void B_InfosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_InfosActionPerformed
        // TODO add your handling code here:
            Object publication = null;

    if (A != null) publication = A;
    else if (C != null) publication = C;
    else if (B != null) publication = B;
    else if (T != null) publication = T;
    else if (M != null) publication = M;
    else if (R != null) publication = R;

    if (publication != null) {
        JFrame parentFrame = (JFrame) SwingUtilities.getWindowAncestor(this);
        PublicationDetailsDialog dialog = new PublicationDetailsDialog(parentFrame, publication);
        dialog.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Aucune publication à afficher.", "Erreur", JOptionPane.ERROR_MESSAGE);
    }
        
        
    }//GEN-LAST:event_B_InfosActionPerformed

    private void titreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titreActionPerformed

    private void titre2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titre2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titre2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_Infos;
    private javax.swing.JButton B_Lire;
    private javax.swing.JPanel option;
    private javax.swing.JTextField titre;
    private javax.swing.JTextField titre2;
    private javax.swing.JTextField type;
    // End of variables declaration//GEN-END:variables
}
