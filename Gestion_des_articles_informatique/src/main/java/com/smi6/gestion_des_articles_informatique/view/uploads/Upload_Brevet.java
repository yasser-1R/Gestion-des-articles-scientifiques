/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.smi6.gestion_des_articles_informatique.view.uploads;
import com.smi6.gestion_des_articles_informatique.controller.uploads.UploadBrevetController;

import com.smi6.gestion_des_articles_informatique.model.Utilisateur;
import java.awt.Image;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;

import javax.swing.JDialog;
import javax.swing.JFileChooser; 
import javax.swing.SwingConstants;

import javax.swing.filechooser.FileNameExtensionFilter;




/**
 *
 * @author YN
 */
public class Upload_Brevet extends javax.swing.JFrame {
private File selectedPdfFile;
private Utilisateur U;

    /**
     * Creates new form Upload4
     */
    public Upload_Brevet(Utilisateur U) {
        initComponents();
        this.U = U;
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        L_upload = new javax.swing.JLabel();
        L_titre = new javax.swing.JLabel();
        L_Discription = new javax.swing.JLabel();
        L_Inventeurs = new javax.swing.JLabel();
        L_Statut = new javax.swing.JLabel();
        L_publierle = new javax.swing.JLabel();
        B_pdf = new javax.swing.JButton();
        TF_titre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TA_discrition = new javax.swing.JTextArea();
        TF_auteurs = new javax.swing.JTextField();
        TF_Statut = new javax.swing.JTextField();
        TF_date = new javax.swing.JTextField();
        B_SelectA = new javax.swing.JButton();
        B_enregistrer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        B_retourner1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        L_upload.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_upload.setForeground(new java.awt.Color(18, 53, 36));
        L_upload.setText("Upload");

        L_titre.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_titre.setForeground(new java.awt.Color(18, 53, 36));
        L_titre.setText("Titre");

        L_Discription.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_Discription.setForeground(new java.awt.Color(18, 53, 36));
        L_Discription.setText("Discription");

        L_Inventeurs.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_Inventeurs.setForeground(new java.awt.Color(18, 53, 36));
        L_Inventeurs.setText("Inventeurs");

        L_Statut.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_Statut.setForeground(new java.awt.Color(18, 53, 36));
        L_Statut.setText("Statut");

        L_publierle.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_publierle.setForeground(new java.awt.Color(18, 53, 36));
        L_publierle.setText("Déposé le");

        B_pdf.setBackground(new java.awt.Color(18, 53, 36));
        B_pdf.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_pdf.setForeground(new java.awt.Color(239, 227, 194));
        B_pdf.setText("PDF");
        B_pdf.setFocusable(false);
        B_pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_pdfActionPerformed(evt);
            }
        });

        TF_titre.setBackground(new java.awt.Color(239, 227, 194));
        TF_titre.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_titre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_titreActionPerformed(evt);
            }
        });

        TA_discrition.setBackground(new java.awt.Color(239, 227, 194));
        TA_discrition.setColumns(20);
        TA_discrition.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        TA_discrition.setRows(5);
        jScrollPane1.setViewportView(TA_discrition);

        TF_auteurs.setBackground(new java.awt.Color(239, 227, 194));
        TF_auteurs.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_auteurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_auteursActionPerformed(evt);
            }
        });

        TF_Statut.setBackground(new java.awt.Color(239, 227, 194));
        TF_Statut.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_Statut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_StatutActionPerformed(evt);
            }
        });

        TF_date.setBackground(new java.awt.Color(239, 227, 194));
        TF_date.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_dateActionPerformed(evt);
            }
        });

        B_SelectA.setBackground(new java.awt.Color(18, 53, 36));
        B_SelectA.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_SelectA.setForeground(new java.awt.Color(239, 227, 194));
        B_SelectA.setText("Select Inventeurs");
        B_SelectA.setFocusable(false);
        B_SelectA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_SelectAActionPerformed(evt);
            }
        });

        B_enregistrer.setBackground(new java.awt.Color(18, 53, 36));
        B_enregistrer.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_enregistrer.setForeground(new java.awt.Color(239, 227, 194));
        B_enregistrer.setText("Enregistrer");
        B_enregistrer.setFocusable(false);
        B_enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_enregistrerActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("dd/mm/yyyy");

        B_retourner1.setBackground(new java.awt.Color(18, 53, 36));
        B_retourner1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_retourner1.setForeground(new java.awt.Color(239, 227, 194));
        B_retourner1.setText("Retourner");
        B_retourner1.setFocusable(false);
        B_retourner1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_retourner1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(B_retourner1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(B_enregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(L_titre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L_Discription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L_upload, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(L_Statut, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TF_Statut)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TF_titre, javax.swing.GroupLayout.PREFERRED_SIZE, 880, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(B_pdf)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(L_Inventeurs, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(L_publierle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TF_date, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(B_SelectA, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(TF_auteurs)))))
                .addGap(9, 9, 9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_upload)
                    .addComponent(B_pdf))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_titre)
                    .addComponent(TF_titre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(L_Discription)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_Statut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L_Statut))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_Inventeurs)
                    .addComponent(TF_auteurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B_SelectA))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_publierle)
                    .addComponent(TF_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_enregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B_retourner1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );

        ImageIcon originalIcon = new ImageIcon(getClass().getResource("/icones/upload.png"));
        Image scaledImage = originalIcon.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon = new ImageIcon(scaledImage);

        // Appliquer l’icône
        L_upload.setIcon(resizedIcon);
        L_upload.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        L_upload.setHorizontalAlignment(SwingConstants.CENTER);
        L_upload.setVerticalAlignment(SwingConstants.CENTER);

        // Position du texte par rapport à l’icône
        L_upload.setHorizontalTextPosition(SwingConstants.RIGHT);
        L_upload.setVerticalTextPosition(SwingConstants.CENTER);
        ImageIcon originalIcon1 = new ImageIcon(getClass().getResource("/icones/text.png"));
        Image scaledImage1 = originalIcon1.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon1 = new ImageIcon(scaledImage1);

        // Appliquer l’icône
        L_titre.setIcon(resizedIcon1);
        L_titre.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        L_titre.setHorizontalAlignment(SwingConstants.CENTER);
        L_titre.setVerticalAlignment(SwingConstants.CENTER);

        // Position du texte par rapport à l’icône
        L_titre.setHorizontalTextPosition(SwingConstants.RIGHT);
        L_titre.setVerticalTextPosition(SwingConstants.CENTER);
        ImageIcon originalIcon2 = new ImageIcon(getClass().getResource("/icones/resume.png"));
        Image scaledImage2 = originalIcon2.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon2 = new ImageIcon(scaledImage2);

        // Appliquer l’icône
        L_Discription.setIcon(resizedIcon2);
        L_Discription.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        L_Discription.setHorizontalAlignment(SwingConstants.CENTER);
        L_Discription.setVerticalAlignment(SwingConstants.CENTER);

        // Position du texte par rapport à l’icône
        L_Discription.setHorizontalTextPosition(SwingConstants.RIGHT);
        L_Discription.setVerticalTextPosition(SwingConstants.CENTER);
        ImageIcon originalIcon99 = new ImageIcon(getClass().getResource("/icones/Profile.png"));
        Image scaledImage99 = originalIcon99.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon99 = new ImageIcon(scaledImage99);

        // Appliquer l’icône
        L_Inventeurs.setIcon(resizedIcon99);
        L_Inventeurs.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        L_Inventeurs.setHorizontalAlignment(SwingConstants.CENTER);
        L_Inventeurs.setVerticalAlignment(SwingConstants.CENTER);

        // Position du texte par rapport à l’icône
        L_Inventeurs.setHorizontalTextPosition(SwingConstants.RIGHT);
        L_Inventeurs.setVerticalTextPosition(SwingConstants.CENTER);
        ImageIcon originalIcon3 = new ImageIcon(getClass().getResource("/icones/statut.png"));
        Image scaledImage3 = originalIcon3.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon3 = new ImageIcon(scaledImage3);

        // Appliquer l’icône
        L_Statut.setIcon(resizedIcon3);
        L_Statut.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        L_Statut.setHorizontalAlignment(SwingConstants.CENTER);
        L_Statut.setVerticalAlignment(SwingConstants.CENTER);

        // Position du texte par rapport à l’icône
        L_Statut.setHorizontalTextPosition(SwingConstants.RIGHT);
        L_Statut.setVerticalTextPosition(SwingConstants.CENTER);
        ImageIcon originalIcon33 = new ImageIcon(getClass().getResource("/icones/publie.png"));
        Image scaledImage33 = originalIcon33.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon33 = new ImageIcon(scaledImage33);

        // Appliquer l’icône
        L_publierle.setIcon(resizedIcon33);
        L_publierle.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        L_publierle.setHorizontalAlignment(SwingConstants.CENTER);
        L_publierle.setVerticalAlignment(SwingConstants.CENTER);

        // Position du texte par rapport à l’icône
        L_publierle.setHorizontalTextPosition(SwingConstants.RIGHT);
        L_publierle.setVerticalTextPosition(SwingConstants.CENTER);
        ImageIcon originalIcon111 = new ImageIcon(getClass().getResource("/icones/enregistre.png"));
        Image scaledImage111 = originalIcon111.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon111 = new ImageIcon(scaledImage111);

        // Appliquer l’icône
        B_enregistrer.setIcon(resizedIcon111);
        B_enregistrer.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        B_enregistrer.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (icône + texte)
        B_enregistrer.setVerticalAlignment(SwingConstants.CENTER);

        // Pour éviter que le texte soit décalé par la taille du bouton
        B_enregistrer.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte à droite de l’icône
        B_enregistrer.setVerticalTextPosition(SwingConstants.CENTER);  // Aligné verticalement
        ImageIcon originalIcon11 = new ImageIcon(getClass().getResource("/icones/Retour1.png"));
        Image scaledImage11 = originalIcon11.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);
        ImageIcon resizedIcon11 = new ImageIcon(scaledImage11);

        // Appliquer l’icône
        B_retourner1.setIcon(resizedIcon11);
        B_retourner1.setIconTextGap(10); // Espace entre icône et texte

        // Centrage vertical du texte + icône
        B_retourner1.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (icône + texte)
        B_retourner1.setVerticalAlignment(SwingConstants.CENTER);

        // Pour éviter que le texte soit décalé par la taille du bouton
        B_retourner1.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte à droite de l’icône
        B_retourner1.setVerticalTextPosition(SwingConstants.CENTER);  // Aligné verticalement

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TF_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_dateActionPerformed

    private void TF_titreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_titreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_titreActionPerformed

    private void B_SelectAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_SelectAActionPerformed
            // Prepare list of pre-selected names
    String currentText = TF_auteurs.getText().trim();
    List<String> selectedProfesseurs = new ArrayList<>();
    if (!currentText.isEmpty()) {
        for (String name : currentText.split(",")) {
            selectedProfesseurs.add(name.trim());
        }
    }

    // Create panel with pre-selected names
    SelectProfesseursPanel selectProfPanel = new SelectProfesseursPanel(selectedProfesseurs);

    // Create dialog
    JDialog dialog = new JDialog(this, "Choisir Professeurs", true);
    dialog.getContentPane().add(selectProfPanel);
    dialog.pack();
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);

    // AFTER dialog is closed:
    // Get new list of selected professors
    String selected = selectProfPanel.getSelectedProfesseursText();
    
    // OVERWRITE the old text field content
    TF_auteurs.setText(selected);
        
    }//GEN-LAST:event_B_SelectAActionPerformed

    private void B_enregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_enregistrerActionPerformed
            // 1. Récupérer les données du formulaire
    String titre = TF_titre.getText();
    String description = TA_discrition.getText();
    String inventeurs = TF_auteurs.getText();
    String statut = TF_Statut.getText();
    String dateDepot = TF_date.getText();

    // 2. Créer le contrôleur
    UploadBrevetController uploadController = new UploadBrevetController();

    try {
        // 3. Appeler la méthode d'enregistrement
        uploadController.uploadBrevet(this.U, titre, description, statut, inventeurs, dateDepot, selectedPdfFile);

        // ✅ 4. Afficher une popup de succès
        javax.swing.JOptionPane.showMessageDialog(this,
                "Brevet enregistré avec succès!",
                "Succès",
                javax.swing.JOptionPane.INFORMATION_MESSAGE);
        resetForm();

    } catch (Exception ex) {
        // ❌ 5. En cas d'erreur
        javax.swing.JOptionPane.showMessageDialog(this,
                "Erreur lors de l'enregistrement du brevet :\n" + ex.getMessage(),
                "Erreur",
                javax.swing.JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_B_enregistrerActionPerformed

    
    private void resetForm() {
    // Clear all text fields
    TF_titre.setText("");
    TA_discrition.setText("");
    TF_auteurs.setText("");
    TF_Statut.setText("");
    TF_date.setText("");
    
    // Reset the PDF button text
    B_pdf.setText("PDF");

    // Optionally, reset the PDF file (in case you want to unselect the file)
    selectedPdfFile = null;
}
    
    
    private void B_pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_pdfActionPerformed
        // TODO add your handling code here:
            JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Choisir un fichier PDF");

    // Only allow PDF files
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Fichiers PDF", "pdf");
    fileChooser.setFileFilter(filter);

    int result = fileChooser.showOpenDialog(this);

    if (result == JFileChooser.APPROVE_OPTION) {
        selectedPdfFile = fileChooser.getSelectedFile();
        System.out.println("✅ Fichier PDF sélectionné : " + selectedPdfFile.getAbsolutePath());

        // Update button text to show selected filename (optional)
        B_pdf.setText(selectedPdfFile.getName());
    } else {
        System.out.println("❌ Aucun fichier sélectionné");
    }
        
    }//GEN-LAST:event_B_pdfActionPerformed

    private void B_retourner1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_retourner1ActionPerformed
        Select_type  ST = new Select_type(this.U);
        ST.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_B_retourner1ActionPerformed

    private void TF_auteursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_auteursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_auteursActionPerformed

    private void TF_StatutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_StatutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_StatutActionPerformed
    
    
    
    
//    private void loadJournaux() {
//    try {
//        EntityManagerFactory emf = Persistence.createEntityManagerFactory("my-persistence-unit");
//        EntityManager em = emf.createEntityManager();
//
//        List<Journal> journaux = em.createQuery("FROM Journal", Journal.class).getResultList();
//        CB_journaux.removeAllItems(); // Clean old items
//
//        for (Journal journal : journaux) {
//            CB_journaux.addItem(journal.getNom());
//        }
//
//        em.close();
//        emf.close();
//    } catch (Exception ex) {
//        System.err.println("Erreur lors du chargement des journaux : " + ex.getMessage());
//    }
//}
//    
    
    
//    
//    
//    private void loadProfesseurs() {
//    try {
//        EntityManagerFactory emf = Persistence.createEntityManagerFactory("my-persistence-unit");
//        EntityManager em = emf.createEntityManager();
//
//        List<Professeur> professeurs = em.createQuery("FROM Professeur", Professeur.class).getResultList();
//        CB_professeurs.removeAllItems(); // Clean old items if exist
//
//        for (Professeur prof : professeurs) {
//            CB_professeurs.addItem(prof.getNomComplet());
//        }
//
//        em.close();
//        emf.close();
//    } catch (Exception ex) {
//        System.err.println("Erreur lors du chargement des professeurs : " + ex.getMessage());
//    }
//}

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Upload_Brevet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Upload_Brevet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Upload_Brevet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Upload_Brevet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new Upload4(5L).setVisible(true);
////            }
////        });
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new Upload_Article(5L).setVisible(true);
////            }
////        });
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new Upload4(5L).setVisible(true);
////            }
////        });
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new Upload_Article(5L).setVisible(true);
////            }
////        });
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new Upload4(5L).setVisible(true);
////            }
////        });
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new Upload_Article(5L).setVisible(true);
////            }
////        });
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new Upload4(5L).setVisible(true);
////            }
////        });
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new Upload_Article(5L).setVisible(true);
////            }
////        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_SelectA;
    private javax.swing.JButton B_enregistrer;
    private javax.swing.JButton B_pdf;
    private javax.swing.JButton B_retourner1;
    private javax.swing.JLabel L_Discription;
    private javax.swing.JLabel L_Inventeurs;
    private javax.swing.JLabel L_Statut;
    private javax.swing.JLabel L_publierle;
    private javax.swing.JLabel L_titre;
    private javax.swing.JLabel L_upload;
    private javax.swing.JTextArea TA_discrition;
    private javax.swing.JTextField TF_Statut;
    private javax.swing.JTextField TF_auteurs;
    private javax.swing.JTextField TF_date;
    private javax.swing.JTextField TF_titre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
