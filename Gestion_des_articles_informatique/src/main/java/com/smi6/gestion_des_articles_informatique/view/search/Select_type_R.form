<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.5" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JFrameFormInfo">
  <Properties>
    <Property name="defaultCloseOperation" type="int" value="3"/>
    <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
      <Dimension value="[1050, 600]"/>
    </Property>
  </Properties>
  <SyntheticProperties>
    <SyntheticProperty name="formSizePolicy" type="int" value="1"/>
    <SyntheticProperty name="generateCenter" type="boolean" value="false"/>
  </SyntheticProperties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
  </AuxValues>

  <Layout>
    <DimensionLayout dim="0">
      <Group type="103" groupAlignment="0" attributes="0">
          <Group type="102" alignment="0" attributes="0">
              <Component id="jPanel3" min="-2" max="-2" attributes="0"/>
              <EmptySpace max="-2" attributes="0"/>
              <Component id="jPanel2" min="-2" max="-2" attributes="0"/>
              <EmptySpace type="unrelated" max="-2" attributes="0"/>
              <Component id="jPanel1" min="-2" max="-2" attributes="0"/>
              <EmptySpace max="-2" attributes="0"/>
          </Group>
      </Group>
    </DimensionLayout>
    <DimensionLayout dim="1">
      <Group type="103" groupAlignment="0" attributes="0">
          <Component id="jPanel1" alignment="0" max="32767" attributes="0"/>
          <Component id="jPanel3" alignment="0" max="32767" attributes="0"/>
          <Component id="jPanel2" alignment="0" max="32767" attributes="0"/>
      </Group>
    </DimensionLayout>
  </Layout>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="jPanel2">

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" attributes="0">
                  <EmptySpace pref="173" max="32767" attributes="0"/>
                  <Group type="103" groupAlignment="1" attributes="0">
                      <Component id="jButton11" min="-2" pref="256" max="-2" attributes="0"/>
                      <Component id="jButton9" alignment="1" min="-2" pref="256" max="-2" attributes="0"/>
                      <Component id="jButton10" alignment="1" min="-2" pref="256" max="-2" attributes="0"/>
                      <Component id="jButton3" alignment="1" min="-2" pref="256" max="-2" attributes="0"/>
                      <Component id="jButton7" alignment="1" min="-2" pref="256" max="-2" attributes="0"/>
                      <Component id="jButton6" alignment="1" min="-2" pref="256" max="-2" attributes="0"/>
                      <Component id="jButton2" alignment="1" min="-2" pref="256" max="-2" attributes="0"/>
                  </Group>
                  <EmptySpace pref="171" max="32767" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="0" attributes="0">
                  <EmptySpace min="-2" pref="26" max="-2" attributes="0"/>
                  <Component id="jButton2" min="-2" pref="50" max="-2" attributes="0"/>
                  <EmptySpace min="-2" pref="32" max="-2" attributes="0"/>
                  <Component id="jButton6" min="-2" pref="50" max="-2" attributes="0"/>
                  <EmptySpace max="32767" attributes="0"/>
                  <Component id="jButton7" min="-2" pref="50" max="-2" attributes="0"/>
                  <EmptySpace max="32767" attributes="0"/>
                  <Component id="jButton3" min="-2" pref="50" max="-2" attributes="0"/>
                  <EmptySpace max="32767" attributes="0"/>
                  <Component id="jButton10" min="-2" pref="50" max="-2" attributes="0"/>
                  <EmptySpace max="32767" attributes="0"/>
                  <Component id="jButton9" min="-2" pref="50" max="-2" attributes="0"/>
                  <EmptySpace max="32767" attributes="0"/>
                  <Component id="jButton11" min="-2" pref="50" max="-2" attributes="0"/>
                  <EmptySpace max="32767" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Component class="javax.swing.JButton" name="jButton2">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="24" green="35" red="12" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Calibri" size="18" style="0"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="c2" green="e3" red="ef" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Article   "/>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.SoftBevelBorderInfo">
                <BevelBorder/>
              </Border>
            </Property>
            <Property name="focusable" type="boolean" value="false"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton2ActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="ImageIcon originalIcon1 = new ImageIcon(getClass().getResource(&quot;/icones/article.png&quot;));&#xa;Image scaledImage1 = originalIcon1.getImage().getScaledInstance(30, 30, Image.SCALE_SMOOTH);&#xa;ImageIcon resizedIcon1 = new ImageIcon(scaledImage1);&#xa;&#xa;// Appliquer l&#x2019;ic&#xf4;ne&#xa;jButton2.setIcon(resizedIcon1);&#xa;jButton2.setIconTextGap(10); // Espace entre ic&#xf4;ne et texte&#xa;&#xa;// Centrage vertical du texte + ic&#xf4;ne&#xa;jButton2.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (ic&#xf4;ne + texte)&#xa;jButton2.setVerticalAlignment(SwingConstants.CENTER);&#xa;&#xa;// Pour &#xe9;viter que le texte soit d&#xe9;cal&#xe9; par la taille du bouton&#xa;jButton2.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte &#xe0; droite de l&#x2019;ic&#xf4;ne&#xa;jButton2.setVerticalTextPosition(SwingConstants.CENTER);  // Align&#xe9; verticalement"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JButton" name="jButton6">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="24" green="35" red="12" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Calibri" size="18" style="0"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="c2" green="e3" red="ef" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Conf&#xe9;rence   "/>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.SoftBevelBorderInfo">
                <BevelBorder/>
              </Border>
            </Property>
            <Property name="focusable" type="boolean" value="false"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton6ActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="ImageIcon originalIcon3 = new ImageIcon(getClass().getResource(&quot;/icones/conference.png&quot;));&#xa;Image scaledImage3 = originalIcon3.getImage().getScaledInstance(30, 30, Image.SCALE_SMOOTH);&#xa;ImageIcon resizedIcon3 = new ImageIcon(scaledImage3);&#xa;&#xa;// Appliquer l&#x2019;ic&#xf4;ne&#xa;jButton6.setIcon(resizedIcon3);&#xa;jButton6.setIconTextGap(10); // Espace entre ic&#xf4;ne et texte&#xa;&#xa;// Centrage vertical du texte + ic&#xf4;ne&#xa;jButton6.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (ic&#xf4;ne + texte)&#xa;jButton6.setVerticalAlignment(SwingConstants.CENTER);&#xa;&#xa;// Pour &#xe9;viter que le texte soit d&#xe9;cal&#xe9; par la taille du bouton&#xa;jButton6.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte &#xe0; droite de l&#x2019;ic&#xf4;ne&#xa;jButton6.setVerticalTextPosition(SwingConstants.CENTER);  // Align&#xe9; verticalement"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JButton" name="jButton7">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="24" green="35" red="12" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Calibri" size="18" style="0"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="c2" green="e3" red="ef" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Th&#xe8;se de Doctorat  "/>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.SoftBevelBorderInfo">
                <BevelBorder/>
              </Border>
            </Property>
            <Property name="focusable" type="boolean" value="false"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton7ActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="ImageIcon originalIcon4 = new ImageIcon(getClass().getResource(&quot;/icones/these.png&quot;));&#xa;Image scaledImage4 = originalIcon4.getImage().getScaledInstance(30, 30, Image.SCALE_SMOOTH);&#xa;ImageIcon resizedIcon4 = new ImageIcon(scaledImage4);&#xa;&#xa;// Appliquer l&#x2019;ic&#xf4;ne&#xa;jButton7.setIcon(resizedIcon4);&#xa;jButton7.setIconTextGap(10); // Espace entre ic&#xf4;ne et texte&#xa;&#xa;// Centrage vertical du texte + ic&#xf4;ne&#xa;jButton7.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (ic&#xf4;ne + texte)&#xa;jButton7.setVerticalAlignment(SwingConstants.CENTER);&#xa;&#xa;// Pour &#xe9;viter que le texte soit d&#xe9;cal&#xe9; par la taille du bouton&#xa;jButton7.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte &#xe0; droite de l&#x2019;ic&#xf4;ne&#xa;jButton7.setVerticalTextPosition(SwingConstants.CENTER);  // Align&#xe9; verticalement"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JButton" name="jButton9">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="24" green="35" red="12" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Calibri" size="18" style="0"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="c2" green="e3" red="ef" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Rapport de recherche"/>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.SoftBevelBorderInfo">
                <BevelBorder/>
              </Border>
            </Property>
            <Property name="focusable" type="boolean" value="false"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton9ActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="ImageIcon originalIcon7 = new ImageIcon(getClass().getResource(&quot;/icones/raport.png&quot;));&#xa;Image scaledImage7 = originalIcon7.getImage().getScaledInstance(30, 30, Image.SCALE_SMOOTH);&#xa;ImageIcon resizedIcon7 = new ImageIcon(scaledImage7);&#xa;&#xa;// Appliquer l&#x2019;ic&#xf4;ne&#xa;jButton9.setIcon(resizedIcon7);&#xa;jButton9.setIconTextGap(10); // Espace entre ic&#xf4;ne et texte&#xa;&#xa;// Centrage vertical du texte + ic&#xf4;ne&#xa;jButton9.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (ic&#xf4;ne + texte)&#xa;jButton9.setVerticalAlignment(SwingConstants.CENTER);&#xa;&#xa;// Pour &#xe9;viter que le texte soit d&#xe9;cal&#xe9; par la taille du bouton&#xa;jButton9.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte &#xe0; droite de l&#x2019;ic&#xf4;ne&#xa;jButton9.setVerticalTextPosition(SwingConstants.CENTER);  // Align&#xe9; verticalement"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JButton" name="jButton10">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="24" green="35" red="12" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Calibri" size="18" style="0"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="c2" green="e3" red="ef" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Brevet   "/>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.SoftBevelBorderInfo">
                <BevelBorder/>
              </Border>
            </Property>
            <Property name="focusable" type="boolean" value="false"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton10ActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="ImageIcon originalIcon6 = new ImageIcon(getClass().getResource(&quot;/icones/brevet.png&quot;));&#xa;Image scaledImage6 = originalIcon6.getImage().getScaledInstance(30, 30, Image.SCALE_SMOOTH);&#xa;ImageIcon resizedIcon6 = new ImageIcon(scaledImage6);&#xa;&#xa;// Appliquer l&#x2019;ic&#xf4;ne&#xa;jButton10.setIcon(resizedIcon6);&#xa;jButton10.setIconTextGap(10); // Espace entre ic&#xf4;ne et texte&#xa;&#xa;// Centrage vertical du texte + ic&#xf4;ne&#xa;jButton10.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (ic&#xf4;ne + texte)&#xa;jButton10.setVerticalAlignment(SwingConstants.CENTER);&#xa;&#xa;// Pour &#xe9;viter que le texte soit d&#xe9;cal&#xe9; par la taille du bouton&#xa;jButton10.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte &#xe0; droite de l&#x2019;ic&#xf4;ne&#xa;jButton10.setVerticalTextPosition(SwingConstants.CENTER);  // Align&#xe9; verticalement"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JButton" name="jButton3">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="24" green="35" red="12" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Calibri" size="18" style="0"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="c2" green="e3" red="ef" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="M&#xe9;moire de Master  "/>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.SoftBevelBorderInfo">
                <BevelBorder/>
              </Border>
            </Property>
            <Property name="focusable" type="boolean" value="false"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton3ActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="ImageIcon originalIcon5 = new ImageIcon(getClass().getResource(&quot;/icones/memoire.png&quot;));&#xa;Image scaledImage5 = originalIcon5.getImage().getScaledInstance(30, 30, Image.SCALE_SMOOTH);&#xa;ImageIcon resizedIcon5 = new ImageIcon(scaledImage5);&#xa;&#xa;// Appliquer l&#x2019;ic&#xf4;ne&#xa;jButton3.setIcon(resizedIcon5);&#xa;jButton3.setIconTextGap(10); // Espace entre ic&#xf4;ne et texte&#xa;&#xa;// Centrage vertical du texte + ic&#xf4;ne&#xa;jButton3.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (ic&#xf4;ne + texte)&#xa;jButton3.setVerticalAlignment(SwingConstants.CENTER);&#xa;&#xa;// Pour &#xe9;viter que le texte soit d&#xe9;cal&#xe9; par la taille du bouton&#xa;jButton3.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte &#xe0; droite de l&#x2019;ic&#xf4;ne&#xa;jButton3.setVerticalTextPosition(SwingConstants.CENTER);  // Align&#xe9; verticalement"/>
          </AuxValues>
        </Component>
        <Component class="javax.swing.JButton" name="jButton11">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="24" green="35" red="12" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Calibri" size="18" style="0"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="c2" green="e3" red="ef" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Tous les types"/>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.SoftBevelBorderInfo">
                <BevelBorder/>
              </Border>
            </Property>
            <Property name="focusable" type="boolean" value="false"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton11ActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="ImageIcon originalIcon8 = new ImageIcon(getClass().getResource(&quot;/icones/Connecter.png&quot;));&#xa;Image scaledImage8 = originalIcon8.getImage().getScaledInstance(30, 30, Image.SCALE_SMOOTH);&#xa;ImageIcon resizedIcon8 = new ImageIcon(scaledImage8);&#xa;&#xa;// Appliquer l&#x2019;ic&#xf4;ne&#xa;jButton11.setIcon(resizedIcon8);&#xa;jButton11.setIconTextGap(10); // Espace entre ic&#xf4;ne et texte&#xa;&#xa;// Centrage vertical du texte + ic&#xf4;ne&#xa;jButton11.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (ic&#xf4;ne + texte)&#xa;jButton11.setVerticalAlignment(SwingConstants.CENTER);&#xa;&#xa;// Pour &#xe9;viter que le texte soit d&#xe9;cal&#xe9; par la taille du bouton&#xa;jButton11.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte &#xe0; droite de l&#x2019;ic&#xf4;ne&#xa;jButton11.setVerticalTextPosition(SwingConstants.CENTER);  // Align&#xe9; verticalement"/>
          </AuxValues>
        </Component>
      </SubComponents>
    </Container>
    <Container class="javax.swing.JPanel" name="jPanel1">

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <EmptySpace min="0" pref="216" max="32767" attributes="0"/>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <EmptySpace min="0" pref="600" max="32767" attributes="0"/>
          </Group>
        </DimensionLayout>
      </Layout>
    </Container>
    <Container class="javax.swing.JPanel" name="jPanel3">

      <Layout>
        <DimensionLayout dim="0">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="0" attributes="0">
                  <EmptySpace max="-2" attributes="0"/>
                  <Component id="jButton8" pref="204" max="32767" attributes="0"/>
                  <EmptySpace max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
        <DimensionLayout dim="1">
          <Group type="103" groupAlignment="0" attributes="0">
              <Group type="102" alignment="1" attributes="0">
                  <EmptySpace max="32767" attributes="0"/>
                  <Component id="jButton8" min="-2" pref="50" max="-2" attributes="0"/>
                  <EmptySpace min="-2" pref="30" max="-2" attributes="0"/>
              </Group>
          </Group>
        </DimensionLayout>
      </Layout>
      <SubComponents>
        <Component class="javax.swing.JButton" name="jButton8">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="24" green="35" red="12" type="rgb"/>
            </Property>
            <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
              <Font name="Calibri" size="18" style="0"/>
            </Property>
            <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="c2" green="e3" red="ef" type="rgb"/>
            </Property>
            <Property name="text" type="java.lang.String" value="Retourner"/>
            <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
              <Border info="org.netbeans.modules.form.compat2.border.SoftBevelBorderInfo">
                <BevelBorder/>
              </Border>
            </Property>
            <Property name="focusable" type="boolean" value="false"/>
          </Properties>
          <Events>
            <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="jButton8ActionPerformed"/>
          </Events>
          <AuxValues>
            <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="ImageIcon originalIcon = new ImageIcon(getClass().getResource(&quot;/icones/Retour1.png&quot;));&#xa;Image scaledImage = originalIcon.getImage().getScaledInstance(24, 24, Image.SCALE_SMOOTH);&#xa;ImageIcon resizedIcon = new ImageIcon(scaledImage);&#xa;&#xa;// Appliquer l&#x2019;ic&#xf4;ne&#xa;jButton8.setIcon(resizedIcon);&#xa;jButton8.setIconTextGap(10); // Espace entre ic&#xf4;ne et texte&#xa;&#xa;// Centrage vertical du texte + ic&#xf4;ne&#xa;jButton8.setHorizontalAlignment(SwingConstants.CENTER); // Centre tout (ic&#xf4;ne + texte)&#xa;jButton8.setVerticalAlignment(SwingConstants.CENTER);&#xa;&#xa;// Pour &#xe9;viter que le texte soit d&#xe9;cal&#xe9; par la taille du bouton&#xa;jButton8.setHorizontalTextPosition(SwingConstants.RIGHT); // Texte &#xe0; droite de l&#x2019;ic&#xf4;ne&#xa;jButton8.setVerticalTextPosition(SwingConstants.CENTER);  // Align&#xe9; verticalement"/>
          </AuxValues>
        </Component>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
