/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.smi6.gestion_des_articles_informatique.view;
import com.smi6.gestion_des_articles_informatique.controller.UploadMemoireController;

import com.smi6.gestion_des_articles_informatique.model.Utilisateur;

import java.io.File;

import javax.swing.JDialog;
import javax.swing.JFileChooser; 
import javax.swing.JOptionPane;

import javax.swing.filechooser.FileNameExtensionFilter;




/**
 *
 * @author YN
 */
public class Upload_Memoire extends javax.swing.JFrame {
private File selectedPdfFile;
private Utilisateur U;

    /**
     * Creates new form Upload4
     */
    public Upload_Memoire(Utilisateur U) {
        initComponents();
        this.U = U;
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        L_upload = new javax.swing.JLabel();
        L_titre = new javax.swing.JLabel();
        L_Discription = new javax.swing.JLabel();
        L_Encadran = new javax.swing.JLabel();
        L_Statut = new javax.swing.JLabel();
        L_publierle = new javax.swing.JLabel();
        B_pdf = new javax.swing.JButton();
        TF_titre = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TA_resume = new javax.swing.JTextArea();
        TF_Encadran = new javax.swing.JTextField();
        TF_etudiant = new javax.swing.JTextField();
        TF_date = new javax.swing.JTextField();
        B_SelectE = new javax.swing.JButton();
        B_enregistrer = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        B_retourner1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        L_upload.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_upload.setForeground(new java.awt.Color(18, 53, 36));
        L_upload.setText("Upload");

        L_titre.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_titre.setForeground(new java.awt.Color(18, 53, 36));
        L_titre.setText("Titre");

        L_Discription.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_Discription.setForeground(new java.awt.Color(18, 53, 36));
        L_Discription.setText("Resume     ");

        L_Encadran.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_Encadran.setForeground(new java.awt.Color(18, 53, 36));
        L_Encadran.setText("Encadran  ");

        L_Statut.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_Statut.setForeground(new java.awt.Color(18, 53, 36));
        L_Statut.setText("Etudiant");

        L_publierle.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        L_publierle.setForeground(new java.awt.Color(18, 53, 36));
        L_publierle.setText("Soutenue le");

        B_pdf.setBackground(new java.awt.Color(18, 53, 36));
        B_pdf.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_pdf.setForeground(new java.awt.Color(239, 227, 194));
        B_pdf.setText("PDF");
        B_pdf.setFocusable(false);
        B_pdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_pdfActionPerformed(evt);
            }
        });

        TF_titre.setBackground(new java.awt.Color(239, 227, 194));
        TF_titre.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_titre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_titreActionPerformed(evt);
            }
        });

        TA_resume.setBackground(new java.awt.Color(239, 227, 194));
        TA_resume.setColumns(20);
        TA_resume.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        TA_resume.setRows(5);
        jScrollPane1.setViewportView(TA_resume);

        TF_Encadran.setBackground(new java.awt.Color(239, 227, 194));
        TF_Encadran.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_Encadran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_EncadranActionPerformed(evt);
            }
        });

        TF_etudiant.setBackground(new java.awt.Color(239, 227, 194));
        TF_etudiant.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N

        TF_date.setBackground(new java.awt.Color(239, 227, 194));
        TF_date.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        TF_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TF_dateActionPerformed(evt);
            }
        });

        B_SelectE.setBackground(new java.awt.Color(18, 53, 36));
        B_SelectE.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_SelectE.setForeground(new java.awt.Color(239, 227, 194));
        B_SelectE.setText("Select Encadran");
        B_SelectE.setFocusable(false);
        B_SelectE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_SelectEActionPerformed(evt);
            }
        });

        B_enregistrer.setBackground(new java.awt.Color(18, 53, 36));
        B_enregistrer.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_enregistrer.setForeground(new java.awt.Color(239, 227, 194));
        B_enregistrer.setText("Enregistrer");
        B_enregistrer.setFocusable(false);
        B_enregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_enregistrerActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("dd/mm/yyyy");

        B_retourner1.setBackground(new java.awt.Color(18, 53, 36));
        B_retourner1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        B_retourner1.setForeground(new java.awt.Color(239, 227, 194));
        B_retourner1.setText("Retourner");
        B_retourner1.setFocusable(false);
        B_retourner1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_retourner1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(L_titre, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(L_upload, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(L_Discription))
                            .addComponent(L_Statut, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(B_pdf)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TF_titre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TF_etudiant, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(1, 1, 1))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(B_retourner1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(B_enregistrer))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(L_Encadran, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(L_publierle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(TF_date, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(B_SelectE, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(TF_Encadran, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_upload)
                    .addComponent(B_pdf))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_titre)
                    .addComponent(TF_titre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(L_Discription)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TF_etudiant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(L_Statut))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_Encadran)
                    .addComponent(B_SelectE)
                    .addComponent(TF_Encadran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(L_publierle)
                    .addComponent(TF_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(131, 131, 131)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_enregistrer, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B_retourner1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TF_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_dateActionPerformed

    private void TF_titreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_titreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_titreActionPerformed

    private void B_SelectEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_SelectEActionPerformed
     String currentEncadrant = TF_Encadran.getText().trim();

    SelectEncadrantPanel panel = new SelectEncadrantPanel(currentEncadrant);
    JDialog dialog = new JDialog(this, "Choisir l'encadrant", true);
    dialog.getContentPane().add(panel);
    dialog.pack();
    dialog.setLocationRelativeTo(this);
    dialog.setVisible(true);

    // Récupération du nom sélectionné
    String selected = panel.getSelectedEncadrantText();
    if (selected != null) {
        TF_Encadran.setText(selected);
    }
        
    }//GEN-LAST:event_B_SelectEActionPerformed

    private void B_enregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_enregistrerActionPerformed
        

        
        
    // 1. Récupérer les données du formulaire
    String titre = TF_titre.getText().trim();
    String resume = TA_resume.getText().trim();
    String etudiant = TF_etudiant.getText().trim();
    String encadrant = TF_Encadran.getText().trim();
    String date = TF_date.getText().trim();

    // 2. Créer le contrôleur
    UploadMemoireController uploadController = new UploadMemoireController();

    try {
        // 3. Appeler la méthode d'enregistrement
        uploadController.uploadMemoire(this.U, titre, resume, etudiant, encadrant, date, selectedPdfFile);

        // ✅ 4. Afficher une popup de succès
        JOptionPane.showMessageDialog(this,
                "Memoire enregistrée avec succès !",
                "Succès",
                JOptionPane.INFORMATION_MESSAGE);

        // 5. Fermer la fenêtre (ou rediriger)

    } catch (Exception ex) {
        // ❌ 6. En cas d'erreur
        JOptionPane.showMessageDialog(this,
                "Erreur lors de l'enregistrement de la Memoire :\n" + ex.getMessage(),
                "Erreur",
                JOptionPane.ERROR_MESSAGE);
    }
        
        
        
        

    }//GEN-LAST:event_B_enregistrerActionPerformed

    private void B_pdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_pdfActionPerformed
        // TODO add your handling code here:
            JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Choisir un fichier PDF");

    // Only allow PDF files
    FileNameExtensionFilter filter = new FileNameExtensionFilter("Fichiers PDF", "pdf");
    fileChooser.setFileFilter(filter);

    int result = fileChooser.showOpenDialog(this);

    if (result == JFileChooser.APPROVE_OPTION) {
        selectedPdfFile = fileChooser.getSelectedFile();
        System.out.println("✅ Fichier PDF sélectionné : " + selectedPdfFile.getAbsolutePath());

        // Update button text to show selected filename (optional)
        B_pdf.setText(selectedPdfFile.getName());
    } else {
        System.out.println("❌ Aucun fichier sélectionné");
    }
        
    }//GEN-LAST:event_B_pdfActionPerformed

    private void B_retourner1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_retourner1ActionPerformed
        Select_type  ST = new Select_type(this.U);
        ST.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_B_retourner1ActionPerformed

    private void TF_EncadranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TF_EncadranActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TF_EncadranActionPerformed
    
    
    
    
//    private void loadJournaux() {
//    try {
//        EntityManagerFactory emf = Persistence.createEntityManagerFactory("my-persistence-unit");
//        EntityManager em = emf.createEntityManager();
//
//        List<Journal> journaux = em.createQuery("FROM Journal", Journal.class).getResultList();
//        CB_journaux.removeAllItems(); // Clean old items
//
//        for (Journal journal : journaux) {
//            CB_journaux.addItem(journal.getNom());
//        }
//
//        em.close();
//        emf.close();
//    } catch (Exception ex) {
//        System.err.println("Erreur lors du chargement des journaux : " + ex.getMessage());
//    }
//}
//    
    
    
//    
//    
//    private void loadProfesseurs() {
//    try {
//        EntityManagerFactory emf = Persistence.createEntityManagerFactory("my-persistence-unit");
//        EntityManager em = emf.createEntityManager();
//
//        List<Professeur> professeurs = em.createQuery("FROM Professeur", Professeur.class).getResultList();
//        CB_professeurs.removeAllItems(); // Clean old items if exist
//
//        for (Professeur prof : professeurs) {
//            CB_professeurs.addItem(prof.getNomComplet());
//        }
//
//        em.close();
//        emf.close();
//    } catch (Exception ex) {
//        System.err.println("Erreur lors du chargement des professeurs : " + ex.getMessage());
//    }
//}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Upload_Memoire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Upload_Memoire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Upload_Memoire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Upload_Memoire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload4(5L).setVisible(true);
//            }
//        });
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Upload_Article(5L).setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_SelectE;
    private javax.swing.JButton B_enregistrer;
    private javax.swing.JButton B_pdf;
    private javax.swing.JButton B_retourner1;
    private javax.swing.JLabel L_Discription;
    private javax.swing.JLabel L_Encadran;
    private javax.swing.JLabel L_Statut;
    private javax.swing.JLabel L_publierle;
    private javax.swing.JLabel L_titre;
    private javax.swing.JLabel L_upload;
    private javax.swing.JTextArea TA_resume;
    private javax.swing.JTextField TF_Encadran;
    private javax.swing.JTextField TF_date;
    private javax.swing.JTextField TF_etudiant;
    private javax.swing.JTextField TF_titre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
